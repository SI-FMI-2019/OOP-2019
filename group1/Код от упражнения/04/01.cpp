#include <iostream> 

//Добавете се в аудио канала
//Щото вероятно няма да пиша в чата :D 
//От лявата страна, където е менюто, там трябва да идете, ще ви излезе информация кой е в чата
//По-долу, има и едно 'Audio Call Participants'


class Foo{
public:
	//Въпроси по това долу ?
	Foo() //default-ен конструктор
	{
		this->a = new int[5];
		this->b = 5;
	}

	Foo(const Foo& from) //copy конструктор
	{
		//Това го правим, за да няма два обекта да сочат към едно и също място
		this->a = new int[5];
		for(int i = 0; i < 5; i++)
		{
			this->a[i] = from.a[i]; 
		}
	}
	~Foo() //деструктор
	{
		delete[] this->a;
	}

	//Първо, какво искаме да връща оператор+ за този клас ?
	//Може да събираме b-тата на двете инстанции
	//Тогава какъв тип ще ни е резултата ?

	//Колко аргумента ще приема нашия оператор ? -> един
	//операцията + има два аргумента, да, но ние единият вече го имаме (this)
	int operator+(const Foo& second)
	{
		//Искаме да съберем на първия и на втория, член-данната b
		//Какво трябва да напиша ? ->

		int result = this->b + second.b;
		return result;
	}

	//Как ще изглежда оператор- ?
	int operator- (const Foo& second)
	{
		return this->b - second.b;
	}
private:
	int* a;
	int b; //Това ще е някакво число
};
int main() {

	Foo a1, a2;

	//Какво ни трябва, ако в даден имаме динамична памет ? (миналият път го говорихме)
	//Ако имаме динамична памет, винаги трябва да имаме следните 4-ри неща:

	// - default constructor() -> имаме го
	// - copy constructor()
	// - operator= (това ще го говорим след малко)
	// - destructor()

	//Оператори
	//Дайте примери за оператори в C++
	// +, =, *
	
	//В C++ можем да променяме какво правят операторите

	std::cout << a1 + a2 << std::endl; //Какво би трябвало да направи това ?
	//Какво ще се случи, според вас ? -> в момента дава грешка
	//Какво ще изведе сега ? -> 10 (защото 5 + 5)

	std::cout << a1 - a2 << std::endl; //Извежда 0 (защото 5 - 5 = 0)

	//Въпроси до тук ?
	//Нещо ясно ?

	//П.П. Ако другата седмица сме на ФМИ, ще направим допълнително упражнение
	
	//Искате ли да ви напиша един пример
	//Вие да си го гледате вкъщи
	//И другата седмица да питате въпроси ?

	//Twitch ?, добре, след 2-3 минути ще вдигна stream :D 

	return 0;
}